---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/courses":
    get:
      summary: list courses
      tags:
      - Courses
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: text
                    credits:
                      type: integer
                    department_id:
                      type: integer
                  required:
                  - id
                  - name
                  - description
                  - credits
                  - department_id
    post:
      summary: create course
      tags:
      - Courses
      parameters: []
      responses:
        '201':
          description: Course created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: text
                  credits:
                    type: integer
                  department_id:
                    type: integer
                required:
                - name
                - description
                - credits
                - department_id
        '422':
          description: invalid request
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hr Fundimentals
                description:
                  type: text
                  example: test description data
                credits:
                  type: integer
                  example: 60
                department_id:
                  type: integer
                  example: 1
              required:
              - name
              - description
              - credits
              - department_id
  "/courses/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show course
      tags:
      - Courses
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: text
                  credits:
                    type: integer
                  department_id:
                    type: integer
                required:
                - id
                - name
                - description
                - credits
                - department_id
        '404':
          description: not found
    patch:
      summary: update course
      tags:
      - Courses
      parameters:
      - name: id
        in: path
        description: ID of the Course
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hr Fundimentals
                description:
                  type: text
                  example: test description data
                credits:
                  type: integer
                  example: 60
                department_id:
                  type: integer
                  example: 1
              required:
              - name
              - description
              - credits
              - department_id
    delete:
      summary: delete course
      tags:
      - Courses
      parameters:
      - name: id
        in: path
        description: ID of the Course
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hr Fundimentals
                description:
                  type: text
                  example: test description data
                credits:
                  type: integer
                  example: 60
                department_id:
                  type: integer
                  example: 1
  "/departments":
    get:
      summary: list departments
      tags:
      - Departments
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                  required:
                  - id
                  - name
    post:
      summary: create department
      tags:
      - Departments
      parameters: []
      responses:
        '201':
          description: Department created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                required:
                - name
        '422':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - errors
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Department 3
              required:
              - name
  "/departments/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show department
      tags:
      - Departments
      responses:
        '404':
          description: Department not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                required:
                - id
                - name
    patch:
      summary: update department
      tags:
      - Departments
      parameters:
      - name: id
        in: path
        description: ID of the Depatment
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: New deparmant
              required:
              - name
    delete:
      summary: delete department
      tags:
      - Departments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                required:
                - id
                - name
  "/genders":
    get:
      summary: list genders
      tags:
      - Genders
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                      enum:
                      - Male
                      - Female
                      - Not to say
                      - New name
                  required:
                  - id
                  - name
    post:
      summary: create gender
      tags:
      - Genders
      parameters: []
      responses:
        '200':
          description: successful
        '201':
          description: Student created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                    enum:
                    - Male
                    - Female
                required:
                - name
        '422':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Not to say
              required:
              - name
  "/genders/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show gender
      tags:
      - Genders
      parameters:
      - name: id
        in: path
        description: ID of the gender
        required: true
        schema:
          type: integer
      responses:
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                    enum:
                    - Male
                    - Female
    patch:
      summary: update gender
      tags:
      - Genders
      parameters:
      - name: id
        in: path
        description: ID of the gender
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                    enum:
                    - Male
                    - Female
                    - Not to say
                    - New name
                required:
                - id
                - name
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: New name
              required:
              - name
    delete:
      summary: delete gender
      tags:
      - Genders
      parameters:
      - name: id
        in: path
        description: ID of the gender
        required: true
        schema:
          type: integer
      responses:
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                - message
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                    enum:
                    - Male
                    - Female
                    - Not to say
                    - New name
                required:
                - id
                - name
  "/students":
    get:
      summary: list students
      tags:
      - Students
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    first_name:
                      type: string
                    last_name:
                      type: string
                    age:
                      type: integer
                    gender_id:
                      type: integer
                    gender_name:
                      type: string
                    courses:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          description:
                            type: string
                          credits:
                            type: integer
                          department_id:
                            type: integer
    post:
      summary: create student
      tags:
      - Students
      parameters: []
      responses:
        '201':
          description: Student created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  first_name:
                    type: string
                  last_name:
                    type: string
                  age:
                    type: integer
                  gender_id:
                    type: integer
                  gender_name:
                    type: string
                  courses:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                        credits:
                          type: integer
                        department_id:
                          type: integer
                required:
                - first_name
                - last_name
                - age
                - gender_id
                - courses
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: John
                last_name:
                  type: string
                  example: Doe
                age:
                  type: integer
                  example: 25
                gender_id:
                  type: integer
                  example: 1
                course_ids:
                  type: array
                  items:
                    type: string
                    example: '1'
  "/students/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show student
      tags:
      - Students
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  first_name:
                    type: string
                  last_name:
                    type: string
                  age:
                    type: integer
                  gender_id:
                    type: integer
                  gender_name:
                    type: string
                  courses:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                        credits:
                          type: integer
                        department_id:
                          type: integer
        '404':
          description: not found
    patch:
      summary: update student
      tags:
      - Students
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  first_name:
                    type: string
                    example: John
                  last_name:
                    type: string
                    example: Doe
                  age:
                    type: integer
                    example: 25
                  gender_id:
                    type: integer
                    example: 1
                  gender_name:
                    type: string
                    example: Male
                  courses:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                        credits:
                          type: integer
                        department_id:
                          type: integer
        '404':
          description: not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  example: John
                last_name:
                  type: string
                  example: Doe
                age:
                  type: integer
                  example: 25
                gender_id:
                  type: integer
                  example: 1
                gender_name:
                  type: string
                  example: Male
                courses:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      credits:
                        type: integer
                      department_id:
                        type: integer
    delete:
      summary: delete student
      tags:
      - Students
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  first_name:
                    type: string
                  last_name:
                    type: string
                  age:
                    type: integer
                  gender_id:
                    type: integer
                  gender_name:
                    type: string
                  courses:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                        credits:
                          type: integer
                        department_id:
                          type: integer
                required:
                - first_name
                - last_name
                - age
                - gender_id
                - courses
        '404':
          description: not found
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
